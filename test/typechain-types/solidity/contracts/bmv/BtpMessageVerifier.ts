/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export declare namespace IBMV {
  export type VerifierStatusStruct = {
    height: PromiseOrValue<BigNumberish>;
    extra: PromiseOrValue<BytesLike>;
  };

  export type VerifierStatusStructOutput = [BigNumber, string] & {
    height: BigNumber;
    extra: string;
  };
}

export interface BtpMessageVerifierInterface extends utils.Interface {
  functions: {
    "getHeight()": FunctionFragment;
    "getMessageCount()": FunctionFragment;
    "getMessageRoot()": FunctionFragment;
    "getNetworkId()": FunctionFragment;
    "getNetworkSectionHash()": FunctionFragment;
    "getNetworkTypeId()": FunctionFragment;
    "getNextMessageSn()": FunctionFragment;
    "getRemainMessageCount()": FunctionFragment;
    "getSrcNetworkId()": FunctionFragment;
    "getStatus()": FunctionFragment;
    "getValidators(uint256)": FunctionFragment;
    "getValidatorsCount()": FunctionFragment;
    "handleRelayMessage(string,string,uint256,bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getHeight"
      | "getMessageCount"
      | "getMessageRoot"
      | "getNetworkId"
      | "getNetworkSectionHash"
      | "getNetworkTypeId"
      | "getNextMessageSn"
      | "getRemainMessageCount"
      | "getSrcNetworkId"
      | "getStatus"
      | "getValidators"
      | "getValidatorsCount"
      | "handleRelayMessage"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "getHeight", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getMessageCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMessageRoot",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNetworkId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNetworkSectionHash",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNetworkTypeId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNextMessageSn",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRemainMessageCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSrcNetworkId",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getStatus", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getValidators",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getValidatorsCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "handleRelayMessage",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;

  decodeFunctionResult(functionFragment: "getHeight", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getMessageCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMessageRoot",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNetworkId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNetworkSectionHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNetworkTypeId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNextMessageSn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRemainMessageCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSrcNetworkId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getStatus", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getValidators",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getValidatorsCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "handleRelayMessage",
    data: BytesLike
  ): Result;

  events: {};
}

export interface BtpMessageVerifier extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BtpMessageVerifierInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getHeight(overrides?: CallOverrides): Promise<[BigNumber]>;

    getMessageCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    getMessageRoot(overrides?: CallOverrides): Promise<[string]>;

    getNetworkId(overrides?: CallOverrides): Promise<[BigNumber]>;

    getNetworkSectionHash(overrides?: CallOverrides): Promise<[string]>;

    getNetworkTypeId(overrides?: CallOverrides): Promise<[BigNumber]>;

    getNextMessageSn(overrides?: CallOverrides): Promise<[BigNumber]>;

    getRemainMessageCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    getSrcNetworkId(overrides?: CallOverrides): Promise<[string]>;

    getStatus(
      overrides?: CallOverrides
    ): Promise<[IBMV.VerifierStatusStructOutput]>;

    getValidators(
      nth: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getValidatorsCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    handleRelayMessage(
      arg0: PromiseOrValue<string>,
      _prev: PromiseOrValue<string>,
      _sn: PromiseOrValue<BigNumberish>,
      _msg: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  getHeight(overrides?: CallOverrides): Promise<BigNumber>;

  getMessageCount(overrides?: CallOverrides): Promise<BigNumber>;

  getMessageRoot(overrides?: CallOverrides): Promise<string>;

  getNetworkId(overrides?: CallOverrides): Promise<BigNumber>;

  getNetworkSectionHash(overrides?: CallOverrides): Promise<string>;

  getNetworkTypeId(overrides?: CallOverrides): Promise<BigNumber>;

  getNextMessageSn(overrides?: CallOverrides): Promise<BigNumber>;

  getRemainMessageCount(overrides?: CallOverrides): Promise<BigNumber>;

  getSrcNetworkId(overrides?: CallOverrides): Promise<string>;

  getStatus(
    overrides?: CallOverrides
  ): Promise<IBMV.VerifierStatusStructOutput>;

  getValidators(
    nth: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getValidatorsCount(overrides?: CallOverrides): Promise<BigNumber>;

  handleRelayMessage(
    arg0: PromiseOrValue<string>,
    _prev: PromiseOrValue<string>,
    _sn: PromiseOrValue<BigNumberish>,
    _msg: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getHeight(overrides?: CallOverrides): Promise<BigNumber>;

    getMessageCount(overrides?: CallOverrides): Promise<BigNumber>;

    getMessageRoot(overrides?: CallOverrides): Promise<string>;

    getNetworkId(overrides?: CallOverrides): Promise<BigNumber>;

    getNetworkSectionHash(overrides?: CallOverrides): Promise<string>;

    getNetworkTypeId(overrides?: CallOverrides): Promise<BigNumber>;

    getNextMessageSn(overrides?: CallOverrides): Promise<BigNumber>;

    getRemainMessageCount(overrides?: CallOverrides): Promise<BigNumber>;

    getSrcNetworkId(overrides?: CallOverrides): Promise<string>;

    getStatus(
      overrides?: CallOverrides
    ): Promise<IBMV.VerifierStatusStructOutput>;

    getValidators(
      nth: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getValidatorsCount(overrides?: CallOverrides): Promise<BigNumber>;

    handleRelayMessage(
      arg0: PromiseOrValue<string>,
      _prev: PromiseOrValue<string>,
      _sn: PromiseOrValue<BigNumberish>,
      _msg: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string[]>;
  };

  filters: {};

  estimateGas: {
    getHeight(overrides?: CallOverrides): Promise<BigNumber>;

    getMessageCount(overrides?: CallOverrides): Promise<BigNumber>;

    getMessageRoot(overrides?: CallOverrides): Promise<BigNumber>;

    getNetworkId(overrides?: CallOverrides): Promise<BigNumber>;

    getNetworkSectionHash(overrides?: CallOverrides): Promise<BigNumber>;

    getNetworkTypeId(overrides?: CallOverrides): Promise<BigNumber>;

    getNextMessageSn(overrides?: CallOverrides): Promise<BigNumber>;

    getRemainMessageCount(overrides?: CallOverrides): Promise<BigNumber>;

    getSrcNetworkId(overrides?: CallOverrides): Promise<BigNumber>;

    getStatus(overrides?: CallOverrides): Promise<BigNumber>;

    getValidators(
      nth: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getValidatorsCount(overrides?: CallOverrides): Promise<BigNumber>;

    handleRelayMessage(
      arg0: PromiseOrValue<string>,
      _prev: PromiseOrValue<string>,
      _sn: PromiseOrValue<BigNumberish>,
      _msg: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getHeight(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getMessageCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getMessageRoot(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getNetworkId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getNetworkSectionHash(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNetworkTypeId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getNextMessageSn(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getRemainMessageCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSrcNetworkId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getStatus(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getValidators(
      nth: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getValidatorsCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    handleRelayMessage(
      arg0: PromiseOrValue<string>,
      _prev: PromiseOrValue<string>,
      _sn: PromiseOrValue<BigNumberish>,
      _msg: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
