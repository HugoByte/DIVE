/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBMCPeriphery,
  IBMCPeripheryInterface,
} from "../../../../../solidity/contracts/bmc/interfaces/IBMCPeriphery";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_src",
        type: "string",
      },
      {
        indexed: true,
        internalType: "int256",
        name: "_nsn",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_next",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_event",
        type: "string",
      },
    ],
    name: "BTPEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_network",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_receiver",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "_nsn",
        type: "int256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "_network",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "_nsn",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_result",
        type: "uint256",
      },
    ],
    name: "ClaimRewardResult",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_next",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_seq",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_msg",
        type: "bytes",
      },
    ],
    name: "Message",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_prev",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_seq",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_msg",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_ecode",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_emsg",
        type: "string",
      },
    ],
    name: "MessageDropped",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_network",
        type: "string",
      },
      {
        internalType: "string",
        name: "_receiver",
        type: "string",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBtpAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_response",
        type: "bool",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetworkAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNetworkSn",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_network",
        type: "string",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_link",
        type: "string",
      },
    ],
    name: "getStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rxSeq",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "txSeq",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extra",
                type: "bytes",
              },
            ],
            internalType: "struct IBMV.VerifierStatus",
            name: "verifier",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "currentHeight",
            type: "uint256",
          },
        ],
        internalType: "struct Types.LinkStatus",
        name: "_status",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_prev",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "_msg",
        type: "bytes",
      },
    ],
    name: "handleRelayMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_to",
        type: "string",
      },
      {
        internalType: "string",
        name: "_svc",
        type: "string",
      },
      {
        internalType: "int256",
        name: "_sn",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "_msg",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [
      {
        internalType: "int256",
        name: "nsn",
        type: "int256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IBMCPeriphery__factory {
  static readonly abi = _abi;
  static createInterface(): IBMCPeripheryInterface {
    return new utils.Interface(_abi) as IBMCPeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBMCPeriphery {
    return new Contract(address, _abi, signerOrProvider) as IBMCPeriphery;
  }
}
