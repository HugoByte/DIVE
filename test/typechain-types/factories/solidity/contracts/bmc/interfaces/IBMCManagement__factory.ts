/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBMCManagement,
  IBMCManagementInterface,
} from "../../../../../solidity/contracts/bmc/interfaces/IBMCManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_link",
        type: "string",
      },
    ],
    name: "addLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_link",
        type: "string",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "addRelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_dst",
        type: "string",
      },
      {
        internalType: "string",
        name: "_link",
        type: "string",
      },
    ],
    name: "addRoute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_svc",
        type: "string",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "addService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_net",
        type: "string",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "addVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_src",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_seq",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_svc",
        type: "string",
      },
      {
        internalType: "int256",
        name: "_sn",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_nsn",
        type: "int256",
      },
      {
        internalType: "string",
        name: "_feeNetwork",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "_feeValues",
        type: "uint256[]",
      },
    ],
    name: "dropMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeHandler",
    outputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_dst",
        type: "string[]",
      },
    ],
    name: "getFeeTable",
    outputs: [
      {
        internalType: "uint256[][]",
        name: "_feeTable",
        type: "uint256[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLinks",
    outputs: [
      {
        internalType: "string[]",
        name: "_links",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_link",
        type: "string",
      },
    ],
    name: "getRelays",
    outputs: [
      {
        internalType: "address[]",
        name: "_relays",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRoutes",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "dst",
            type: "string",
          },
          {
            internalType: "string",
            name: "next",
            type: "string",
          },
        ],
        internalType: "struct Types.Route[]",
        name: "_routes",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getServices",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "svc",
            type: "string",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
        ],
        internalType: "struct Types.Service[]",
        name: "_servicers",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVerifiers",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "net",
            type: "string",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
        ],
        internalType: "struct Types.Verifier[]",
        name: "_verifiers",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_link",
        type: "string",
      },
    ],
    name: "removeLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_link",
        type: "string",
      },
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "removeRelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_dst",
        type: "string",
      },
    ],
    name: "removeRoute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_svc",
        type: "string",
      },
    ],
    name: "removeService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_net",
        type: "string",
      },
    ],
    name: "removeVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setFeeHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_dst",
        type: "string[]",
      },
      {
        internalType: "uint256[][]",
        name: "_value",
        type: "uint256[][]",
      },
    ],
    name: "setFeeTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IBMCManagement__factory {
  static readonly abi = _abi;
  static createInterface(): IBMCManagementInterface {
    return new utils.Interface(_abi) as IBMCManagementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBMCManagement {
    return new Contract(address, _abi, signerOrProvider) as IBMCManagement;
  }
}
