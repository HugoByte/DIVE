/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Errors,
  ErrorsInterface,
} from "../../../../../solidity/contracts/bmv/libraries/Errors";

const _abi = [
  {
    inputs: [],
    name: "ERR_ALREADY_VERIFIED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERR_INVALID_ARGS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERR_NOT_VERIFIABLE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERR_UNAUTHORIZED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERR_UNKNOWN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101ea61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100605760003560e01c806221eb7a1461006557806349626c7d146100a85780635b9ad75f146100d957806385f1742b14610107578063d550cf8a14610130575b600080fd5b6100926040518060400160405280600e81526020016d32353a496e76616c69644172677360901b81525081565b60405161009f919061015f565b60405180910390f35b610092604051806040016040528060128152602001710c8dce905b1c9958591e55995c9a599a595960721b81525081565b6100926040518060400160405280600f81526020016e0c8d4e955b985d5d1a1bdc9a5e9959608a1b81525081565b6100926040518060400160405280600a815260200169191a9d2ab735b737bbb760b11b81525081565b6100926040518060400160405280601081526020016f32363a4e6f7456657269666961626c6560801b81525081565b600060208083528351808285015260005b8181101561018c57858101830151858201604001528201610170565b8181111561019e576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220852d58f432e0ccfdc2d05be118a911af9b1d4379ebcf7b1a21df76d5a741ef2f64736f6c634300080c0033";

type ErrorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ErrorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Errors__factory extends ContractFactory {
  constructor(...args: ErrorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Errors> {
    return super.deploy(overrides || {}) as Promise<Errors>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Errors {
    return super.attach(address) as Errors;
  }
  override connect(signer: Signer): Errors__factory {
    return super.connect(signer) as Errors__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ErrorsInterface {
    return new utils.Interface(_abi) as ErrorsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Errors {
    return new Contract(address, _abi, signerOrProvider) as Errors;
  }
}
